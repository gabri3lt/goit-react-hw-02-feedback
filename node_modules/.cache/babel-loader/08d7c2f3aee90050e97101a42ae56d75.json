{"ast":null,"code":"var _jsxFileName = \"/home/codi/Dokumenty/GitHub/goit-react-hw-02-feedback/src/components/Statistics.jsx\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    total,\n    positiveFeedback\n  } = _ref;\n\n  if (good !== 0 || neutral !== 0 || bad !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Good: \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Neutral: \", neutral, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Bad:\", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total:\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Positive feedback:\", positiveFeedback, \" % \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No feedback given\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Statistics;\nexport default Statistics;\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/home/codi/Dokumenty/GitHub/goit-react-hw-02-feedback/src/components/Statistics.jsx"],"names":["PropTypes","Statistics","good","neutral","bad","total","positiveFeedback","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;;AACA,MAAMC,UAAU,GAAG,QAAqD;AAAA,MAApD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,GAAoD;;AACtE,MAAIJ,IAAI,KAAK,CAAT,IAAcC,OAAO,KAAK,CAA1B,IAA+BC,GAAG,KAAK,CAA3C,EAA8C;AAC5C,wBACE;AAAA,8BACE;AAAA,6BAAWF,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAcC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,2BAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,6BAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,yCAAuBC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAbD;;KAAML,U;AAeN,eAAeA,UAAf;AAEAA,UAAU,CAACM,SAAX,GAAuB;AACrBL,EAAAA,IAAI,EAAEF,SAAS,CAACQ,MAAV,CAAiBC,UADF;AAErBN,EAAAA,OAAO,EAAEH,SAAS,CAACQ,MAAV,CAAiBC,UAFL;AAGrBL,EAAAA,GAAG,EAAEJ,SAAS,CAACQ,MAAV,CAAiBC,UAHD;AAIrBJ,EAAAA,KAAK,EAAEL,SAAS,CAACQ,MAAV,CAAiBC,UAJH;AAKrBH,EAAAA,gBAAgB,EAAEN,SAAS,CAACQ,MAAV,CAAiBC;AALd,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\n  if (good !== 0 || neutral !== 0 || bad !== 0) {\n    return (\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral} </li>\n        <li>Bad:{bad}</li>\n        <li>Total:{total}</li>\n        <li>Positive feedback:{positiveFeedback} % </li>\n      </ul>\n    );\n  }\n  return <p>No feedback given</p>;\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}